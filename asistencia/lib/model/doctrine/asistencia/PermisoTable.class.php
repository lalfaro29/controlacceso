<?php

/**
 * PermisoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PermisoTable extends PluginPermisoTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object PermisoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Permiso');
    }
    
    
    
    	public function getPermisoUsuario($id_usuario=null,$fecha=null,$campo="u.nombre",$ordenar="ASC",$permiso = null){
		$q = Doctrine_Query::create()
			->from("Permiso p")
			->leftJoin("p.Usuario u");
			if(!is_null($id_usuario) && $id_usuario){
				$q->where("(p.usuario_id = $id_usuario)");
			}
			if(!is_null($permiso) && $permiso){
				$q->andWhere("p.idpermiso != ?",$permiso);
			}
			if(!is_null($fecha)){
                            if(is_array($fecha)){
				$q->andWhere("((to_char(fechadesde,'yyyy-mm-dd') between '".$fecha["desde"]."' AND '".$fecha["hasta"]."')");
				$q->orWhere("(to_char(fechahasta,'yyyy-mm-dd') between '".$fecha["desde"]."' AND '".$fecha["hasta"]."'))");
                            }elseif($fecha && $fecha!=""){
				$q->andWhere("((to_char(fechadesde,'yyyy-mm-dd') between '".$fecha."' AND '".$fecha."'))");
                            }
			}
                        
                if($campo && $ordenar){
                    $q->orderBy("$campo $ordenar");
                }
		return $q;
               // printf($q);
                //print $q->getSqlQuery()."<br>";
	}
        
        public function listarPermisosempleado($data){
                $check=$data->getParameter("seleccion",false);
                $campo="u.apellido,u.nombre";
                $pos = ($check)?1:0;
                switch($data->getParameter("iSortCol_0")):
                     case $pos:
                         $campo="u.apellido,u.nombre";
                     break;
                     case $pos+1:
                         $campo="u.cedula";
                     break;
                     case $pos+2:
                         $campo="c.cargo";
                     break;
                     case $pos+3:
                         $campo="d.departamento";
                     break; 
                     case $pos+4:
                         $campo="s.sede";
                     break;  
                    
                endswitch;
                $datos = $this->getPermisoUsuario($data->getParameter("empleado_id",null),null,$campo,$data->getParameter("sSortDir_0"))->execute();
		$resultados = array();
                $js_funcion=$data->getParameter("funcion",'empleado_seleccionar');
		foreach($datos as $campo => $usuario):
			if($check){
                           $resultados [$campo][] = "<input type=\"checkbox\" name=\"check_empleado[]\" id=\"check_empleado[]\" value=\"".$usuario->getIdusuario()."\" >";
                           $resultados [$campo][] =Asistencia::limitar_caracteres($usuario->getApellido()." ".$usuario->getNombre(),30);
                        }else{
                            $js_empleado = "\"".$usuario->getIdusuario()."\",".
                                        "\"".$usuario->getNombre()."\"".",\"".$usuario->getApellido()."\",".
                                        "\"".$usuario->getCedula()."\"".",\"".$usuario->getIdtipoempleado()."\",".
                                        "\"".$usuario->getIdcargo()."\"".",\"".$usuario->getIddepartamento()."\",".
                                        "\"".$usuario->getSueldo()."\"".",\"".$usuario->getIdsede()."\",".
                                        "\"".$usuario->getFechaingreso()."\"".",\"".$usuario->getIdproyecto()."\",".
                                        "\"".$usuario->getIdconfiguracion()."\"".",\"".$usuario->getIpusuario()."\",".
                                        "\"".(($usuario->UsuarioSistema())?$usuario->UsuarioSistema()->getIdtipousuario().
                                        "\","."\"".$usuario->UsuarioSistema()->getIdusuariosistema():"null,null")."\"";
                           $resultados [$campo][] = "<div class='seleccion_campo' style='cursor:pointer' onclick='".$js_funcion."(".$js_empleado.")'>".Asistencia::limitar_caracteres($usuario->getApellido()." ".$usuario->getNombre(),30)."</div>"; 
                        }
                        
			$resultados [$campo][] =$usuario->getCedula();
			$resultados [$campo][] =Asistencia::limitar_caracteres($usuario->getCargo()->getCargo(),17);
			$resultados [$campo][] =Asistencia::limitar_caracteres($usuario->getDepartamento()->getdepartamento(),5);
			$resultados [$campo][] =Asistencia::limitar_caracteres($usuario->getSede()->getSede(),15).
                                                "<input type=\"hidden\" id=\"usuario_id\" name=\"usuario_id\" value=\"".$usuario->getIdUsuario()."\" >";
		endforeach;
		return $resultados;
               // printf($resultados);
        }
        
        public function getPermisoUsuarioJson($usuario=null,$data=null){
                $campo="p.fecha";
                $resultados = array();
                switch($data->getParameter("iSortCol_0")):
                     case 2:
                         $campo="p.fecha";
                     break;
                     case 3:
                         $campo="m.motivo";
                     break;   
                endswitch;
                $datos = $this->getPermisoUsuario($usuario,null,$campo,$data->getParameter("sSortDir_0"))
                        ->leftJoin("p.Motivo m")
                        ->execute();
                foreach($datos as $campo => $usuario):
                    $js_editar = "\"".$usuario->getIdpermiso()."\"".",\"".$usuario->getTipopermiso()."\",".
                                 "\"".date("d/m/Y",(strtotime($usuario->getFechadesde())))."\"".",\"".date("d/m/Y",(strtotime($usuario->getFechahasta())))."\",".
                                 "\"".$usuario->getHoras()."\"".",\"".$usuario->getIdmotivo()."\"";
                    $resultados [$campo][] = "<input type=\"button\" value=\"\" class=\"btnEditar\" onclick='editar(".$js_editar.")' >";
                    $resultados [$campo][] = "<input type=\"button\" value=\"\" class=\"btnEliminar\"  onclick='eliminar(".$usuario->getIdpermiso().")' >";
                    if($usuario->getTipopermiso() =="parcial"){
                        $resultados [$campo][] = date("d/m/Y",(strtotime($usuario->getFechadesde())))." (".$usuario->getHoras().")hrs";
                    }else if($usuario->getTipopermiso() =="dias"){
                        $resultados [$campo][] = "Desde el ".date("d/m/Y",(strtotime($usuario->getFechadesde())))." Hasta el ".date("d/m/Y",(strtotime($usuario->getFechahasta())));
                    }
                    $resultados [$campo][] = $usuario->getMotivo()->getMotivo();
                    $js_editar= "";
                endforeach;
		return $resultados;
        }
        public function getPermisoSecretaria($secretaria=null,$fecha_desde=null,$fecha_hasta=null){
		$q = Doctrine_Query::create()
			->from("Permiso p")
			->leftJoin("p.Usuario u")
                        ->leftJoin("p.Motivo m")
                        ->leftJoin("u.Cargo ca");

                        if(!is_null($secretaria) && $secretaria){
                            $q->andWhere("p.id_usuario_r= ?",$secretaria);
			}
                        
                        if(!is_null($fecha_desde) && !is_null($fecha_hasta)){
                            
                          $fecha_desde=Asistencia::cambiarFormatoFecha_a_MDA_3($fecha_desde, "/","-");
                          $fecha_hasta=  Asistencia::cambiarFormatoFecha_a_MDA_3($fecha_hasta,"/","-");
                        
                          
                          $q->andWhere("((to_char(fechadesde,'yyyy-mm-dd') between '".$fecha_desde."' AND '".$fecha_hasta."')");
                            //$q->andWhere("(to_char(fechadesde,'yy-mm-dd') between '".$desde."' AND (to_char(fechahasta,'yy-mm-dd') between '".$hasta."'))");
                           $q->andWhere("(to_char(fechahasta,'yyyy-mm-dd') between '".$fecha_desde."' AND '".$fecha_hasta."'))");
                        }
                        $q->orderBy("p.fecha,u.nombre ");
                   //  print $q->getSqlQuery()."<br>";
		return $q;
                //printf($q);
	
	}
         public function getVerificarPermiso($id_usuario=null,$fecha=null,$tiempo=null){
            // echo "Estoy aqui" .$tiempo;
		$q = Doctrine_Query::create()
			->from("Permiso p")
			->leftJoin("p.Usuario u");
              

                      
                        if(!is_null($id_usuario) && $id_usuario){
				$q->where("(p.usuario_id = $id_usuario)");
			}
                        
                        if(!is_null($fecha)){
                        
                            if(is_array($fecha)){
				$q->andWhere("((to_char(fechadesde,'yyyy-mm-dd') between '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["desde"],"-","-")."' AND '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["hasta"],"-","-")."')");
				$q->orWhere("(to_char(fechahasta,'yyyy-mm-dd') between '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["desde"],"-","-")."' AND '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["hasta"],"-","-")."'))");
                            }elseif($fecha && $fecha!=""){
				$q->andWhere("((to_char(fechadesde,'yyyy-mm-dd') between '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["desde"],"-","-")."' AND '".Asistencia::cambiarFormatoFecha_a_MDA_3($fecha["hasta"],"-","-")."'))");
                            }
			}
                        if (!is_null($tiempo)){
                            if (is_array($tiempo)){
                                $q->orWhere("(tipopermiso='".$tiempo["dias"]."') or (tipopermiso='".$tiempo["parcial"]."')");
                                $q->andWhere("(tipopermiso='".$tiempo["dias"]."') and (tipopermiso='".$tiempo["parcial"]."')");
                             }elseif($tiempo && $tiempo!=""){
				$q->andWhere("(tipopermiso='".$tiempo["dias"]."') and (tipopermiso='".$tiempo["parcial"]."')");
                            }
                        }
                        $q->orderBy("p.fecha ");
                     // print $q->getSqlQuery()."<br>";
		return $q;
                //printf($q);
	
	}
        
}