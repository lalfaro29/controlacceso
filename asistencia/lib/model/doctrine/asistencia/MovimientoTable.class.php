<?php

/**
 * MovimientoTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MovimientoTable extends PluginMovimientoTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object MovimientoTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Movimiento');
    }

        public function Movimiento_usuario(){  
		return Doctrine_Query::create()
			->from('Movimiento m')
			->leftJoin("m.Usuario u");
        }
    
	public function movimientosUsuario($idUsuario,$fecha = null,$movimiento = null,$orden="DESC",$departamento = null){  
		$q = $this->Movimiento_usuario()
			->andWhere("u.idUsuario = ?",$idUsuario);
			if(!is_null($fecha)){
				$q->andWhere("to_char(m.fecha,'dd-mm-yyyy')= ?",$fecha);
			}
			if(!is_null($movimiento)){
				$q->andWhere("m.movimiento= ? ",$movimiento);
			}          
		return $q->orderBy("m.fecha,movimiento $orden")->limit(2);
                //print "Estoy aqui".$q;
	}
        
        public function distinctMovimiento($configuracion = null){
            $usuario = array();
             $q=  Doctrine_Query::create()
                        ->select("DISTINCT idusuario")
			->from('Movimiento m');
                    if(!empty($configuracion) && $configuracion!="null"){
                        $q->andWhere("m.idconfiguracion = ? ",$configuracion);
                    }
                    $q->execute();
                    foreach($q as $rs_usu):
                        $usuario[] = $rs_usu->getIdmovimiento();
                    endforeach;
                    return $usuario;
        }
        public function Movimientos($usuarios = null, $departamentos= null, $fecha_inicio= null, $fecha_fin = null,$tipo_empleado=null,$configuracion=null,$formatear=false,$distint=false){
            $q=  Doctrine_Query::create()
			->from('Usuario u')
			->leftJoin("u.Movimiento m");
                if($distint){
                    $q->andWhereIn("m.idmovimiento",$this->distinctMovimiento($configuracion));
                }else{
                    if(!empty($configuracion) && $configuracion!="null"){
                        $q->andWhere("m.idconfiguracion = ? ",$configuracion);
                    }
                }
                if(!empty($usuarios) && $usuarios!="null"){
                        $q->andWhere("u.idusuario = ?",$usuarios);
                }
                if(!empty($departamentos) && $departamentos!="null"){
                   $q->andWhere("u.iddepartamento = ? ",$departamentos);
                }
                if(!empty($tipo_empleado) && $tipo_empleado!="null"){
                   $q->andWhere("u.idtipoempleado = ? ",$tipo_empleado);
                }
                
                if(!empty($fecha_inicio) && $fecha_inicio!="null"){
                    if($formatear){
                        $fecha_inicio = Asistencia::cambiarFormatoFecha($fecha_inicio,"/");
                        $q->andWhere("to_char(m.fecha,'yyyy-mm-dd')>= '".$fecha_inicio."'");
                    }else{
                        $q->andWhere("to_char(m.fecha,'yyyy-mm-dd')>= '".$fecha_inicio."'");
                    }
                }
                if(!empty($fecha_fin) && $fecha_fin!="null"){
                    if($formatear){
                        $fecha_fin = Asistencia::cambiarFormatoFecha($fecha_fin,"/");
                        $q->andWhere("to_char(m.fecha,'yyyy-mm-dd')<= '".$fecha_fin."'");
                    }else{
                        $q->andWhere("to_char(m.fecha,'yyyy-mm-dd')<= '".$fecha_fin."'");
                    }
                }
   // $q->andWhere("u.idusuario = 30701");
                
                $q->andWhere("m.idmovimiento is NOT NULL");
                $q->orderBy("u.nombre,u.apellido,u.cedula,m.fecha ASC");
               //print $q->getSqlQuery();
               return  $q;
        }
        
        public function movimientoUsuario($usuario=null,$departamento=null,$personal=null,$turno=null,$fecha_i=null,$fecha_f=null){
             $q=  Doctrine_Query::create()
			->from('Movimiento entrada')
               ->leftJoin("entrada.Motivo me")
			->leftJoin("entrada.Usuario u")
			->leftJoin("u.Configuracion c")
			->leftJoin("u.TipoEmpleado te")
			->leftJoin("u.Cargo ca")
			->leftJoin("u.Departamento d")
			->leftJoin("u.Movimiento salida ON 
                            (entrada.idusuario = salida.idusuario AND salida.movimiento = 'S' 
                            AND TO_CHAR(salida.fecha, 'yyyy-mm-dd') = TO_CHAR(entrada.fecha, 'yyyy-mm-dd')
                            OR (salida.fecha IS NULL))")
               ->leftJoin("salida.Motivo ms")
                        ->andWhere("entrada.movimiento = 'E' ");
   // $q->limit(1);
                       if(is_numeric($usuario)){
                           $q->andWhere("u.idusuario = ?",$usuario);
                       }
                       if(is_numeric($departamento)){
                           $q->andWhere("u.iddepartamento = ?",$departamento);
                       }
                       if(is_numeric($personal)){
                           $q->andWhere("u.idtipoempleado = ?",$personal);
                       }
                       if(is_numeric($turno)){
                           $q->andWhere("u.idconfiguracion = ?",$turno);
                       }
             
                       if($fecha_i!=null && $fecha_f!=null){
                            $fecha_i1 = Asistencia::cambiarFormatoFecha_a_MDA_3($fecha_i,"/","-");
                            $fecha_f1 = Asistencia::cambiarFormatoFecha_a_MDA_3($fecha_f,"/","-");
                            $q->andWhere("to_char(entrada.fecha,'yyyy-mm-dd') >= '".$fecha_i1."'");
                            $q->andWhere("to_char(entrada.fecha,'yyyy-mm-dd') <= '".$fecha_f1."'");
                       
                       }else{
                            $q->limit(30);
                       }
                       $q->orderBy("u.nombre,u.apellido,u.cedula,entrada.fecha,salida.fecha DESC");
                      // print $q->getSqlQuery();
                       return $q;
          //  print $q->getSqlQuery();
        }
        
        public function MovimientoUsuarioFecha($usuario=null,$fecha=null,$fecha_inicio=null,$fecha_fin=null){
                $where = "";
                $q = "SELECT
                           entrada.fecha as fechaentrada,salida.fecha as fechasalida,
                            entrada.idmovimiento as entrada_id,
                            salida.idmovimiento as salida_id,
                            entrada.movimiento as movimientoEntrada,
                            salida.movimiento as movimientoSalida,
                            m1.motivo as motivoentrada,
                            m2.motivo as motivosalida,
                            entrada.registro as registroentrada,
                            salida.registro as registrosalida
                            
                            FROM asistencia.usuario u 
                            
                            LEFT JOIN asistencia.movimiento entrada ON
                            entrada.idusuario=u.idusuario AND entrada.movimiento='E'
                            
                            LEFT JOIN asistencia.movimiento salida  ON salida.idusuario=u.idusuario
                            AND salida.movimiento='S' AND 
                            to_char(entrada.fecha,'yyyy-mm-dd') = to_char(salida.fecha,'yyyy-mm-dd')
                            
                            LEFT JOIN asistencia.motivo m1 ON entrada.idmotivo = m1.idmotivo
                            
                            LEFT JOIN asistencia.motivo m2 ON salida.idmotivo = m2.idmotivo ";
                
//                $q=  Doctrine_Query::create()
//                        ->select("u.idusuario as id, me.fecha as fechaentrada,ms.fecha as fechasalida,me.idmovimiento as entrada_id,ms.idmovimiento as salida_id,
//                            me.movimiento as movimientoEntrada,
//                            ms.movimiento as movimientoSalida,
//                            m1.motivo as motivoentrada,
//                            m2.motivo as motivosalida,
//                            me.registro as registroentrada,
//                            ms.registro as registrosalida")
//			->from('Usuario u, Movimiento me, Movimiento ms, Motivo m1, Motivo m2')
////                        ->leftJoin("u.Movimiento me",ARRAY("movimiento='E'"))
////			->leftJoin("u.Movimiento ms",ARRAY("movimiento='S'"))
////			->leftJoin("me.Motivo m1")
////			->leftJoin("ms.Motivo m2");
//                        ->andWhere("(me.idusuario = u.idusuario AND me.movimiento = 'E')")
////                        ->andWhere("me.movimiento = 'E'");
//                        ->andWhere("(ms.idusuario = u.idusuario AND ms.movimiento = 'S' AND to_char(me.fecha,'yyyy-mm-dd') = to_char(ms.fecha,'yyyy-mm-dd'))")
////                        ->andWhere("me.movimiento = 'S'")
//                        //->andWhere("to_char(me.fecha,'yyyy-mm-dd') = to_char(ms.fecha,'yyyy-mm-dd')")
//                        ->andWhere("me.idmotivo = m1.idmotivo")
//                        ->andWhere("ms.idmotivo = m2.idmotivo");
                
                if(!is_null($fecha)){
                    //$q->andWhere("to_char(me.fecha,'dd-mm-yyyy') = '".$fecha."'");
                    $where .=" to_char(entrada.fecha,'dd-mm-yyyy') = '".$fecha."' "; 
                }
                if(!empty($fecha_inicio) && $fecha_inicio!="null"){
                    //$q->andWhere("to_char(me.fecha,'yyyy-mm-dd') >= '".$fecha_inicio."'");
                    $where .= ($where)?" AND ":"";
                    $where .=" to_char(entrada.fecha,'yyyy-mm-dd')>= '".$fecha_inicio."' ";  
                }
                
                if(!empty($fecha_fin) && $fecha_fin!="null"){
                    //$q->andWhere("to_char(me.fecha,'yyyy-mm-dd')<= '".$fecha_fin."'");
                    $where .= ($where)?" AND ":"";
                    $where .=" to_char(entrada.fecha,'yyyy-mm-dd')<= '".$fecha_fin."' "; 
                }
                
                if(!is_null($usuario)){
                    //$q->andWhere("u.idusuario = ?",$usuario);
                    $where .= ($where)?" AND ":"";
                    $where .=" u.idusuario=$usuario";
                }
                
                if($where){
                    $q .=" WHERE ". $where;
                }
                
                //$q->orderBy("me.fecha, me.movimiento, u.apellido, u.nombre ASC");
                $q.=" ORDER BY entrada.fecha,entrada.movimiento,u.apellido,u.nombre ASC";
                
                //$q->setHydrationMode(Doctrine::HYDRATE_ARRAY);
                $con = Doctrine_Manager::getInstance()->getConnection('doctrine');
                $st = $con->execute($q);
                //return $q->execute();
                return $st->fetchAll();
                //print $q->getSqlQuery();
                
                
                
                
                
                
                
                
        }
        
  
}
