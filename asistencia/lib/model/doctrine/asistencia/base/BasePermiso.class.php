<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Permiso', 'doctrine');

/**
 * BasePermiso
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idpermiso
 * @property integer $usuario_id
 * @property timestamp $fecha
 * @property timestamp $fechadesde
 * @property timestamp $fechahasta
 * @property integer $horas
 * @property string $tipopermiso
 * @property integer $idmotivo
 * @property string $archivo
 * @property integer $id_usuario_r
 * @property Usuario $Usuario
 * @property Motivo $Motivo
 * 
 * @method integer   getIdpermiso()    Returns the current record's "idpermiso" value
 * @method integer   getUsuarioId()    Returns the current record's "usuario_id" value
 * @method timestamp getFecha()        Returns the current record's "fecha" value
 * @method timestamp getFechadesde()   Returns the current record's "fechadesde" value
 * @method timestamp getFechahasta()   Returns the current record's "fechahasta" value
 * @method integer   getHoras()        Returns the current record's "horas" value
 * @method string    getTipopermiso()  Returns the current record's "tipopermiso" value
 * @method integer   getIdmotivo()     Returns the current record's "idmotivo" value
 * @method string    getArchivo()      Returns the current record's "archivo" value
 * @method integer   getIdUsuarioR()   Returns the current record's "id_usuario_r" value
 * @method Usuario   getUsuario()      Returns the current record's "Usuario" value
 * @method Motivo    getMotivo()       Returns the current record's "Motivo" value
 * @method Permiso   setIdpermiso()    Sets the current record's "idpermiso" value
 * @method Permiso   setUsuarioId()    Sets the current record's "usuario_id" value
 * @method Permiso   setFecha()        Sets the current record's "fecha" value
 * @method Permiso   setFechadesde()   Sets the current record's "fechadesde" value
 * @method Permiso   setFechahasta()   Sets the current record's "fechahasta" value
 * @method Permiso   setHoras()        Sets the current record's "horas" value
 * @method Permiso   setTipopermiso()  Sets the current record's "tipopermiso" value
 * @method Permiso   setIdmotivo()     Sets the current record's "idmotivo" value
 * @method Permiso   setArchivo()      Sets the current record's "archivo" value
 * @method Permiso   setIdUsuarioR()   Sets the current record's "id_usuario_r" value
 * @method Permiso   setUsuario()      Sets the current record's "Usuario" value
 * @method Permiso   setMotivo()       Sets the current record's "Motivo" value
 * 
 * @package    asistencia
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePermiso extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asistencia.Permiso');
        $this->hasColumn('idpermiso', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('usuario_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fechadesde', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('fechahasta', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horas', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipopermiso', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'un dia',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('idmotivo', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('archivo', 'string', 100, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 100,
             ));
        $this->hasColumn('id_usuario_r', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'usuario_id',
             'foreign' => 'idusuario',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Motivo', array(
             'local' => 'idmotivo',
             'foreign' => 'idmotivo',
             'onDelete' => 'CASCADE'));
    }
}