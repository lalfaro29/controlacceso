<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Configuracion', 'doctrine');

/**
 * BaseConfiguracion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idconfiguracion
 * @property integer $idusuario
 * @property timestamp $fecha
 * @property time $horaentrada
 * @property time $horasalida
 * @property integer $horamaxentrada
 * @property integer $central
 * @property float $cestatique_x_jornada
 * @property float $precioticks
 * @property integer $idsede
 * @property time $horadesdedi
 * @property time $horahastadi
 * @property time $horadesdeno
 * @property time $horahastano
 * @property float $porcentajedi
 * @property float $porcentajeno
 * @property Usuario $Usuario
 * @property Sede $Sede
 * @property Doctrine_Collection $RelacionConfigFeriado
 * @property Doctrine_Collection $Movimiento
 * 
 * @method integer             getIdconfiguracion()       Returns the current record's "idconfiguracion" value
 * @method integer             getIdusuario()             Returns the current record's "idusuario" value
 * @method timestamp           getFecha()                 Returns the current record's "fecha" value
 * @method time                getHoraentrada()           Returns the current record's "horaentrada" value
 * @method time                getHorasalida()            Returns the current record's "horasalida" value
 * @method integer             getHoramaxentrada()        Returns the current record's "horamaxentrada" value
 * @method integer             getCentral()               Returns the current record's "central" value
 * @method float               getCestatiqueXJornada()    Returns the current record's "cestatique_x_jornada" value
 * @method float               getPrecioticks()           Returns the current record's "precioticks" value
 * @method integer             getIdsede()                Returns the current record's "idsede" value
 * @method time                getHoradesdedi()           Returns the current record's "horadesdedi" value
 * @method time                getHorahastadi()           Returns the current record's "horahastadi" value
 * @method time                getHoradesdeno()           Returns the current record's "horadesdeno" value
 * @method time                getHorahastano()           Returns the current record's "horahastano" value
 * @method float               getPorcentajedi()          Returns the current record's "porcentajedi" value
 * @method float               getPorcentajeno()          Returns the current record's "porcentajeno" value
 * @method Usuario             getUsuario()               Returns the current record's "Usuario" value
 * @method Sede                getSede()                  Returns the current record's "Sede" value
 * @method Doctrine_Collection getRelacionConfigFeriado() Returns the current record's "RelacionConfigFeriado" collection
 * @method Doctrine_Collection getMovimiento()            Returns the current record's "Movimiento" collection
 * @method Configuracion       setIdconfiguracion()       Sets the current record's "idconfiguracion" value
 * @method Configuracion       setIdusuario()             Sets the current record's "idusuario" value
 * @method Configuracion       setFecha()                 Sets the current record's "fecha" value
 * @method Configuracion       setHoraentrada()           Sets the current record's "horaentrada" value
 * @method Configuracion       setHorasalida()            Sets the current record's "horasalida" value
 * @method Configuracion       setHoramaxentrada()        Sets the current record's "horamaxentrada" value
 * @method Configuracion       setCentral()               Sets the current record's "central" value
 * @method Configuracion       setCestatiqueXJornada()    Sets the current record's "cestatique_x_jornada" value
 * @method Configuracion       setPrecioticks()           Sets the current record's "precioticks" value
 * @method Configuracion       setIdsede()                Sets the current record's "idsede" value
 * @method Configuracion       setHoradesdedi()           Sets the current record's "horadesdedi" value
 * @method Configuracion       setHorahastadi()           Sets the current record's "horahastadi" value
 * @method Configuracion       setHoradesdeno()           Sets the current record's "horadesdeno" value
 * @method Configuracion       setHorahastano()           Sets the current record's "horahastano" value
 * @method Configuracion       setPorcentajedi()          Sets the current record's "porcentajedi" value
 * @method Configuracion       setPorcentajeno()          Sets the current record's "porcentajeno" value
 * @method Configuracion       setUsuario()               Sets the current record's "Usuario" value
 * @method Configuracion       setSede()                  Sets the current record's "Sede" value
 * @method Configuracion       setRelacionConfigFeriado() Sets the current record's "RelacionConfigFeriado" collection
 * @method Configuracion       setMovimiento()            Sets the current record's "Movimiento" collection
 * 
 * @package    asistencia
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConfiguracion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asistencia.Configuracion');
        $this->hasColumn('idconfiguracion', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('idusuario', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fecha', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horaentrada', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horasalida', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horamaxentrada', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('central', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cestatique_x_jornada', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('precioticks', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('idsede', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('horadesdedi', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horahastadi', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horadesdeno', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('horahastano', 'time', 25, array(
             'type' => 'time',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('porcentajedi', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('porcentajeno', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Usuario', array(
             'local' => 'idusuario',
             'foreign' => 'idusuario',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Sede', array(
             'local' => 'idsede',
             'foreign' => 'idsede',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Feriado as RelacionConfigFeriado', array(
             'refClass' => 'RelacionConfigFeriado',
             'local' => 'idconfiguracion',
             'foreign' => 'idferiado'));

        $this->hasMany('Movimiento', array(
             'local' => 'idconfiguracion',
             'foreign' => 'idconfiguracion'));
    }
}